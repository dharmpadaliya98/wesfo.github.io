@page "/product/create"
@page "/product/edit/{id:int}"

@inject IProductRepository _productRepository
@inject NavigationManager _navigationManager

<div class="row my-2">
    <h3 class="card-title text-primary mb-3 ml-3">@Title Product</h3>

    <div class="col-10">
        @if (IsLoading)
        {
            <_Loader></_Loader>
        }
        else
        {
            <EditForm Model="Product" OnValidSubmit="UpsertProduct">
                <DataAnnotationsValidator />
                @*<ValidationSummary/>*@
                <div class="form-group">
                    <label>Name</label>
                    <InputText @bind-Value="Product.Name" class="form-control"></InputText>
                    <ValidationMessage For="()=>Product.Name"></ValidationMessage>
                </div>
                <div class="form-group py-2">
                    <button class="btn btn-primary">@Title</button>
                    <NavLink href="Product" class="btn btn-secondary">Back to Index</NavLink>
                </div>
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public int Id { get; set; }


    private ProductDTO Product { get; set; } = new();
    private string Title { get; set; } = "Create";
    public bool IsLoading { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                //create
                IsLoading = false;
            }
            else
            {
                //update
                Title = "Update";
                await LoadProduct();
            }
        }

    }

    private async Task LoadProduct()
    {
        IsLoading = true;
        StateHasChanged();
        Product = await _productRepository.Get(Id);
        IsLoading = false;
        StateHasChanged();
    }
    private async Task UpsertProduct()
    {
        if (Product.Id == 0)
        {
            //create
            await _productRepository.Create(Product);
        }
        else
        {
            //update
            await _productRepository.Update(Product);
        }
        _navigationManager.NavigateTo("product");


    }
}